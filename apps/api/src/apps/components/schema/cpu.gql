enum PackagingType {
  BOXED
}

type CPU {
  # image: String
  id: String!
  name: String!
  price: String!
  manufacturer: String!
  partNumber: String!
  componentType: ComponentType!

  socket: String!
  series: String!
  microarchitecture: String!
  coreFamily: String!
  coreCount: String!
  coreClock: String!
  tdp: String!
  integratedGraphics: String!
  cooler: Boolean!
  packaging: PackagingType!
}

input CreateCPUInput {
  id: String!
  name: String!
  price: String!
  componentType: ComponentType!
  manufacturer: String!
  partNumber: String!
  series: String!
  microarchitecture: String!
  coreFamily: String!
  socket: String!
  coreCount: String!
  coreClock: String!
  tdp: String!
  integratedGraphics: String!
  cooler: Boolean!
  packaging: PackagingType!
}

input UpdateCPUInput {
  name: String
  price: String
  manufacturer: String
  partNumber: String
  series: String
  microarchitecture: String
  coreFamily: String
  socket: String
  coreCount: String
  coreClock: String
  tdp: String
  integratedGraphics: String
  cooler: Boolean
  packaging: PackagingType
}

type Query {
  CPUs: [CPU]!
  CPU(id: String!): CPU
}

type Mutation {
  createCPU(createCPUInput: CreateCPUInput!): Boolean
  updateCPU(id: ObjectId!, updateCPUInput: UpdateCPUInput!): Boolean
  deleteCPU(id: ObjectId!): Boolean
}
