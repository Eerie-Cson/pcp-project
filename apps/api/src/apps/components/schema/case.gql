enum CaseType {
  ATX_MID_TOWER
  EATX
  ATX
  MICRO_ATX
  MINI_ITX
}

enum SidePanelType {
  TEMPERED_GLASS
  TINTED_TEMPERED_GLASS
}

type Case {
  # image: String
  id: String!
  name: String!
  componentType: ComponentType!
  price: String!
  manufacturer: String!
  partNumber: String!

  color: String!
  type: CaseType!
  formFactor: String!
  interface: String!
  powerSupply: Boolean!
  sidePanel: SidePanelType!
}

input CreateCaseInput {
  id: String!
  name: String!
  componentType: ComponentType!
  price: String!
  manufacturer: String!
  partNumber: String!
  color: String!
  type: CaseType!
  formFactor: String!
  interface: String!
  powerSupply: Boolean!
  sidePanel: SidePanelType!
}

input UpdateCaseInput {
  name: String
  price: String
  manufacturer: String
  partNumber: String
  color: String
  type: CaseType
  formFactor: String
  interface: String
  powerSupply: Boolean
  sidePanel: SidePanelType
}

type Query {
  getCases: [Case]!
  getCase(id: ObjectId!): Case
}

type Mutation {
  createCase(createCaseInput: CreateCaseInput!): Boolean
  updateCase(id: ObjectId!, updateCaseInput: UpdateCaseInput!): Boolean
  deleteCase(id: ObjectId!): Boolean
}
