
type Memory {
  # image: String
  id: ObjectId!
  name: String!
  price: String!
  manufacturer: String!
  partNumber: String!
  
  speed: String!
  formFactor: String!
  modules: String!
  voltage: String!
  heatSpreader: Boolean!
  color: String!
}

input CreateMemoryInput {
  id: ObjectId!
  name: String!
  price: String!
  manufacturer: String!
  partNumber: String!
  speed: String!
  formFactor: String!
  modules: String!
  voltage: String!
  heatSpreader: Boolean! 
  color: String!
}

input UpdateMemoryInput {
  name: String
  price: String
  manufacturer: String
  partNumber: String
  speed: String
  formFactor: String
  modules: String
  voltage: String
  heatSpreader: Boolean
  color: String
}

type Query {
  getMemorys: [Memory]!
  getMemory(id: ObjectId!): Memory
}

type Mutation {
  createMemory(createMemoryInput: CreateMemoryInput!): Boolean
  updateMemory(id: ObjectId!, updateMemoryInput: UpdateMemoryInput!): Boolean
  deleteMemory(id: ObjectId!): Boolean
}
